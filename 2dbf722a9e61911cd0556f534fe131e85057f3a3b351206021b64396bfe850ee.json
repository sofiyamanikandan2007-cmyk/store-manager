{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dineshkumar\\\\Downloads\\\\inventory-management-frontend-20250917T041326Z-1-001\\\\inventory-management-frontend\\\\src\\\\context\\\\InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useReducer, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryContext = /*#__PURE__*/createContext(null);\nconst InventoryDispatchContext = /*#__PURE__*/createContext(null);\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [inventoryInLS, setInventoryInLS] = useLocalStorage(\"inventory\", initialInventory);\n  const [inventory, dispatch] = useReducer(inventoryReducer, inventoryInLS);\n  useEffect(() => {\n    setInventoryInLS(inventory);\n  });\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: inventory,\n    children: /*#__PURE__*/_jsxDEV(InventoryDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(InventoryProvider, \"UDdJH95jsg6HfqktSaFYeJpWdFQ=\", false, function () {\n  return [useLocalStorage];\n});\n_c = InventoryProvider;\nexport const useInventory = () => {\n  _s2();\n  return useContext(InventoryContext);\n};\n_s2(useInventory, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useInventoryDispatch = () => {\n  _s3();\n  return useContext(InventoryDispatchContext);\n};\n_s3(useInventoryDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst inventoryReducer = (state, action) => {\n  switch (action.type) {\n    case 'NEW_PRODUCT':\n      {\n        return [...state, {\n          productName: action.productName,\n          imageUrl: action.imageUrl,\n          price: action.price,\n          tags: action.tags,\n          stock: parseInt(action.stock)\n        }];\n      }\n    case 'STOCK_ADDED':\n      {\n        return state.map(product => product.productName === action.productName ? {\n          ...product,\n          stock: parseInt(product.stock) + parseInt(action.stock)\n        } : product);\n      }\n    case 'STOCK_SOLD':\n      {\n        return state.map(product => product.productName === action.productName ? {\n          ...product,\n          stock: Math.max(0, parseInt(product.stock) - parseInt(action.stock))\n        } : product);\n      }\n    default:\n      {\n        console.log('Unknown action type: ', action.type);\n        return state;\n      }\n  }\n};\nconst initialInventory = [{\n  productName: 'Sample Item',\n  imageUrl: '/cartImage.png',\n  price: 0,\n  tags: [\"sample\"],\n  stock: 1\n}];\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","useEffect","useLocalStorage","jsxDEV","_jsxDEV","InventoryContext","InventoryDispatchContext","InventoryProvider","children","_s","inventoryInLS","setInventoryInLS","initialInventory","inventory","dispatch","inventoryReducer","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInventory","_s2","useInventoryDispatch","_s3","state","action","type","productName","imageUrl","price","tags","stock","parseInt","map","product","Math","max","console","log","$RefreshReg$"],"sources":["C:/Users/Dineshkumar/Downloads/inventory-management-frontend-20250917T041326Z-1-001/inventory-management-frontend/src/context/InventoryContext.js"],"sourcesContent":["import { createContext, useContext, useReducer, useEffect } from \"react\"\nimport useLocalStorage from \"../hooks/useLocalStorage\"\n\nconst InventoryContext = createContext(null)\nconst InventoryDispatchContext = createContext(null)\n\nexport const InventoryProvider = ({children}) => {\n    const [inventoryInLS, setInventoryInLS] = useLocalStorage(\"inventory\", initialInventory)\n    const [inventory, dispatch] = useReducer(inventoryReducer, inventoryInLS)\n\n    useEffect(()=>{\n        setInventoryInLS(inventory)\n    })\n\n    return (\n        <InventoryContext.Provider value={inventory}>\n            <InventoryDispatchContext.Provider value={dispatch}>\n                {children}\n            </InventoryDispatchContext.Provider>\n        </InventoryContext.Provider>\n    )\n}\n\nexport const useInventory = () => {\n    return useContext(InventoryContext)\n}\n\nexport const useInventoryDispatch = () => {\n    return useContext(InventoryDispatchContext)\n}\n\nconst inventoryReducer = (state, action) => {\n    switch(action.type){\n        case 'NEW_PRODUCT':{\n            return [...state,{\n                productName: action.productName,\n                imageUrl: action.imageUrl,\n                price: action.price,\n                tags: action.tags,\n                stock: parseInt(action.stock),\n            }]\n        }\n        case 'STOCK_ADDED': {\n            return state.map(product =>\n                product.productName === action.productName\n                    ? { ...product, stock: parseInt(product.stock) + parseInt(action.stock) }\n                    : product \n            )\n        }\n        case 'STOCK_SOLD': { \n            return state.map(product =>\n                product.productName === action.productName\n                    ? { ...product, stock: Math.max(0, parseInt(product.stock) - parseInt(action.stock)) }\n                    : product\n            )\n        }\n        default:{\n            console.log('Unknown action type: ', action.type)\n            return state\n        }\n    }\n}\n\nconst initialInventory = [\n    {productName: 'Sample Item', imageUrl:'/cartImage.png', price: 0, tags: [\"sample\"], stock: 1},\n]"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}