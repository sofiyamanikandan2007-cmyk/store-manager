{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useLocalStorage = (key, defaultValue) => {\n  _s();\n  const [localStorageValue, setLocalStorageValue] = useState(() => {\n    try {\n      const value = localStorage.getItem(key);\n      if (value) {\n        return JSON.parse(value);\n      } else {\n        localStorage.setItem(key, JSON.stringify(defaultValue));\n        return defaultValue;\n      }\n    } catch (error) {\n      localStorage.setItem(key, JSON.stringify(defaultValue));\n      return defaultValue;\n    }\n  });\n  const setLocalStorageStateValue = valueOrFn => {\n    let newValue;\n    if (typeof valueOrFn === 'function') {\n      const fn = valueOrFn;\n      newValue = fn(localStorageValue);\n    } else {\n      newValue = valueOrFn;\n    }\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setLocalStorageValue(newValue);\n  };\n  return [localStorageValue, setLocalStorageStateValue];\n};\n_s(useLocalStorage, \"EM3TLtuwbkxq/wwfawuhHOClAXM=\");\nexport default useLocalStorage;","map":{"version":3,"names":["useState","useLocalStorage","key","defaultValue","_s","localStorageValue","setLocalStorageValue","value","localStorage","getItem","JSON","parse","setItem","stringify","error","setLocalStorageStateValue","valueOrFn","newValue","fn"],"sources":["C:/Users/Dineshkumar/Downloads/inventory-management-frontend-20250917T041326Z-1-001/inventory-management-frontend/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst useLocalStorage = (key, defaultValue) => {\n    const [localStorageValue, setLocalStorageValue] = useState(() => {\n        try {\n            const value = localStorage.getItem(key)\n            if (value) {\n                return JSON.parse(value)\n            } else {\n                localStorage.setItem(key, JSON.stringify(defaultValue));\n                return defaultValue\n            }\n        } catch (error) {\n            localStorage.setItem(key, JSON.stringify(defaultValue));\n            return defaultValue\n        }\n    })\n\n    const setLocalStorageStateValue = (valueOrFn) => {\n        let newValue;\n        if (typeof valueOrFn === 'function') {\n            const fn = valueOrFn;\n            newValue = fn(localStorageValue)\n        }\n        else {\n            newValue = valueOrFn;\n        }\n        localStorage.setItem(key, JSON.stringify(newValue));\n        setLocalStorageValue(newValue)\n    }\n    return [localStorageValue, setLocalStorageStateValue]\n}\n\nexport default useLocalStorage;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,eAAe,GAAGA,CAACC,GAAG,EAAEC,YAAY,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,MAAM;IAC7D,IAAI;MACA,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC;MACvC,IAAIK,KAAK,EAAE;QACP,OAAOG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;MAC5B,CAAC,MAAM;QACHC,YAAY,CAACI,OAAO,CAACV,GAAG,EAAEQ,IAAI,CAACG,SAAS,CAACV,YAAY,CAAC,CAAC;QACvD,OAAOA,YAAY;MACvB;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZN,YAAY,CAACI,OAAO,CAACV,GAAG,EAAEQ,IAAI,CAACG,SAAS,CAACV,YAAY,CAAC,CAAC;MACvD,OAAOA,YAAY;IACvB;EACJ,CAAC,CAAC;EAEF,MAAMY,yBAAyB,GAAIC,SAAS,IAAK;IAC7C,IAAIC,QAAQ;IACZ,IAAI,OAAOD,SAAS,KAAK,UAAU,EAAE;MACjC,MAAME,EAAE,GAAGF,SAAS;MACpBC,QAAQ,GAAGC,EAAE,CAACb,iBAAiB,CAAC;IACpC,CAAC,MACI;MACDY,QAAQ,GAAGD,SAAS;IACxB;IACAR,YAAY,CAACI,OAAO,CAACV,GAAG,EAAEQ,IAAI,CAACG,SAAS,CAACI,QAAQ,CAAC,CAAC;IACnDX,oBAAoB,CAACW,QAAQ,CAAC;EAClC,CAAC;EACD,OAAO,CAACZ,iBAAiB,EAAEU,yBAAyB,CAAC;AACzD,CAAC;AAAAX,EAAA,CA7BKH,eAAe;AA+BrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}